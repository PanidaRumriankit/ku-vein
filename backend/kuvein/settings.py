# pylint: skip-file
# -1: [file-ignored]


"""
Django settings for kuvein project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import json
import os
from pathlib import Path

from decouple import config

# Google cloud services
GS_BUCKET_NAME = config('GS_BUCKET_NAME', cast=str, default='your-bucket-name')
try:
    GOOGLE_CREDENTIAL = json.loads(
        config('GOOGLE_APPLICATION_CREDENTIALS', cast=str))
except json.JSONDecodeError:
    GOOGLE_CREDENTIAL = {}

DATA_UPLOAD_MAX_MEMORY_SIZE = 146800640  # 100MB PDF around 140MB base64

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', cast=str,
                    default='bananaappleorangemonkeymoney\
                        noodleenglishorspanish')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool, default=False)

ALLOWED_HOSTS = config('ALLOWED_HOSTS',
                       cast=lambda v: [s.strip() for s in v.split(',')],
                       default='*')

# Application definition

INSTALLED_APPS = [
    'forms.apps.FormsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'corsheaders',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ninja_extra',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # corsheader middle ware
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'forms', 'media')
MEDIA_URL = '/media/'

ROOT_URLCONF = 'kuvein.urls'

CORS_URLS_REGEX = r"^/api/.*$"
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # default Next.js
    "http://127.0.0.1:3000",  # Next.js
    "https://ku-vein.vercel.app",  # Vercel frontend
]

CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
    'email',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kuvein.wsgi.application'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    "loggers": {
        "user_logger": {
            "level": "DEBUG",
            "handlers": ["file"],
        },
    },
    "handlers": {
        "file": {
            "class": "logging.FileHandler",
            "filename": "user.log",
            "formatter": "verbose"
        },
    },
    "formatters": {
        "verbose": {
            "format": "{name} {levelname} {asctime} {module} {message}",
            "style": "{",
        },
    }
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('MYSQLDATABASE', cast=str,
                       default='django'),
        'USER': config('MYSQLUSER', cast=str,
                       default='root'),
        'PASSWORD': config('MYSQLPASS', cast=str,
                           default=''),
        'HOST': config('MYSQLHOST', cast=str,
                       default='127.0.0.1'),
        'PORT': config('MYSQLPORT', cast=str,
                       default='3306'),
    }
}

if 'ca.pem' in os.listdir(os.path.join(BASE_DIR, 'kuvein')):
    DATABASES['default']['OPTIONS'] = {
        'ssl': {'ca': os.path.join(os.path.dirname(__file__), 'ca.pem')}}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = config('TIME_ZONE', cast=str, default='Asia/Bangkok')

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
